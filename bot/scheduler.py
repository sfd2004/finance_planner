
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from db import get_weekly_summary, get_daily_summary, get_users_for_notifications
scheduler = AsyncIOScheduler()


def schedule_jobs(bot):
    from aiogram import Bot  # –∏–º–ø–æ—Ä—Ç —Ç—É—Ç, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤

    async def send_daily_notifications():
        users = get_users_for_notifications()
        for user_id in users:
            daily = get_daily_summary(user_id)
            weekly = get_weekly_summary(user_id)

            lines = ["üìÖ *–°–≤–æ–¥–∫–∞ –∑–∞ –¥–µ–Ω—å*\n"]
            if daily:
                for category, total in daily:
                    lines.append(f"‚Ä¢ {category}: {total}‚Ç∏")
            else:
                lines.append("–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è.")

            lines.append("\nüóì *–°–≤–æ–¥–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é*\n")
            if weekly:
                for category, total in weekly:
                    lines.append(f"‚Ä¢ {category}: {total}‚Ç∏")
            else:
                lines.append("–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –∑–∞ –Ω–µ–¥–µ–ª—é.")

            await bot.send_message(chat_id=user_id, text="\n".join(lines), parse_mode="Markdown")

    scheduler.add_job(send_daily_notifications, "cron", hour=21, minute=53)
